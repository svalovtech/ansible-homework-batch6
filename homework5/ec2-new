terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

resource "aws_key_pair" "ansible" {
  key_name   = "ansible-key"
  public_key = file("~/.ssh/id_rsa.pub")
}

data "aws_ami" "ubuntu" {
  most_recent = true

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }

  owners = ["099720109477"] # Canonical
}

provider "aws" {
  alias  = "ohio"
  region = "us-east-2" # Ohio
}

provider "aws" {
  alias  = "oregon"
  region = "us-west-2" # Oregon
}

provider "aws" {
  alias  = "california"
  region = "us-west-1" # California
}

provider "aws" {
  alias  = "virginia"
  region = "us-east-1" # Virginia
}

resource "aws_instance" "web_ubuntu" {
  count                  = length(var.ec2_ins)
  ami                    = data.aws_ami.ubuntu.id
  instance_type          = var.ec2_ins[count.index].instance_type
  vpc_security_group_ids = [aws_security_group.allow_tls.id]
  region                 = var.region[count.index]
  tags = {
    Name = var.ec2_ins[count.index].name
  }

  provider = aws[count.index]
}

output "ec2_ubuntu_ips" {
  value = aws_instance.web_ubuntu[*].public_ip
}

resource "aws_security_group" "allow_tls" {
  name_prefix = "allow_tls_"

  ingress {
    description      = "TLS from VPC"
    from_port        = var.port[0]
    to_port          = var.port[0]
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  }

    ingress {
    description      = "TLS from VPC"
    from_port        = var.port[1]
    to_port          = var.port[1]
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  }

    egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }
} 

variable "ec2_ins" {
    description = "EC2 instance configurations"
    type = list(object({
      instance_type = string
      name          = string
    }))
  }
  
  variable "region" {
    description = "List of AWS regions"
    type = list(string)
  }